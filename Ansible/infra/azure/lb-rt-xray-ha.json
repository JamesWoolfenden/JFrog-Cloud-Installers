{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "outputs": {
    "lbIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('loadBalancerIp'))).ipAddress]"
    },
    "vmArtPriIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('vmArtPri'))).ipConfigurations[0].properties.privateIPAddress]"
    },
    "vmArtSecArrIp": {
      "copy": {
        "count": "[sub(variables('numberOfArtifactory'),1)]",
        "input": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArtSec'),copyindex()))).ipConfigurations[0].properties.privateIPAddress]"
      },
      "type": "array"
    },
    "vmDbArrIp": {
      "copy": {
        "count": "[variables('numberOfDb')]",
        "input": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmDb'),copyindex()))).ipConfigurations[0].properties.privateIPAddress]"
      },
      "type": "array"
    },
    "vmXrayArrIp": {
      "copy": {
        "count": "[variables('numberOfXray')]",
        "input": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmXray'),copyindex()))).ipConfigurations[0].properties.privateIPAddress]"
      },
      "type": "array"
    }
  },
  "parameters": {
    "adminPublicKey": {
      "metadata": {
        "description": "The ssh public key for the VMs."
      },
      "type": "string"
    },
    "location": {
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      },
      "type": "string"
    },
    "numberOfArtifactory": {
      "defaultValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Number of Artifactory servers."
      },
      "minValue": 1,
      "type": "int"
    },
    "numberOfDb": {
      "defaultValue": 1,
      "maxValue": 2,
      "metadata": {
        "description": "Number of database servers."
      },
      "minValue": 1,
      "type": "int"
    },
    "numberOfXray": {
      "defaultValue": 1,
      "maxValue": 5,
      "metadata": {
        "description": "Number of Xray servers."
      },
      "minValue": 1,
      "type": "int"
    },
    "sizeOfDiskInGB": {
      "defaultValue": 128,
      "maxValue": 1024,
      "metadata": {
        "description": "Size of data disk in GB 128-1024"
      },
      "minValue": 128,
      "type": "int"
    },
    "subnetAddressRange": {
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "Subnet IP prefix MUST be within vnet IP prefix address space."
      },
      "type": "string"
    },
    "vmSize": {
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of the VMs"
      },
      "type": "string"
    },
    "vnetAddressRange": {
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "IP prefix for available addresses in vnet address space."
      },
      "type": "string"
    },
    "vnetName": {
      "defaultValue": "vnet01",
      "metadata": {
        "description": "Name of new vnet to deploy into."
      },
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2019-08-01",
      "location": "[parameters('location')]",
      "name": "[variables('loadBalancerIp')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "type": "Microsoft.Network/publicIPAddresses"
    },
    {
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "name": "[variables('availabilitySetName')]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      },
      "type": "Microsoft.Compute/availabilitySets"
    },
    {
      "apiVersion": "2019-06-01",
      "kind": "StorageV2",
      "location": "[parameters('location')]",
      "name": "[variables('storageAccountNameDiag')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2019-08-01",
      "comments": "Simple Network Security Group for subnet [Subnet]",
      "location": "[parameters('location')]",
      "name": "[variables('mainNsg')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-ssh",
            "properties": {
              "access": "Allow",
              "description": "Allow SSH",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "22",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 100,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "allow-http",
            "properties": {
              "access": "Allow",
              "description": "Allow HTTP",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationPortRange": "80",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 110,
              "protocol": "TCP",
              "sourceAddressPrefix": "*",
              "sourceAddressPrefixes": [],
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mainNsg'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('vnetName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetAddressRange')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('mainNsg'))]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('loadBalancerIp'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('loadBalancerName')]",
      "properties": {
        "backendAddressPools": [
          {
            "name": "LBArt"
          }
        ],
        "frontendIpConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('loadBalancerIp'))]"
              }
            }
          }
        ],
        "inboundNatRules": [
          {
            "name": "ssh",
            "properties": {
              "backendPort": 22,
              "enableFloatingIP": false,
              "enableTcpReset": false,
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('loadBalancerName'),'LBFE')]"
              },
              "frontendPort": 22,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp"
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "lbrule",
            "properties": {
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'LBArt')]"
              },
              "backendPort": 80,
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), 'LBFE')]"
              },
              "frontendPort": 80,
              "idleTimeoutInMinutes": 15,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), 'lbprobe')]"
              },
              "protocol": "Tcp"
            }
          }
        ],
        "probes": [
          {
            "name": "lbprobe",
            "properties": {
              "intervalInSeconds": 15,
              "numberOfProbes": 2,
              "port": 80,
              "protocol": "Tcp"
            }
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "apiVersion": "2019-08-01",
      "dependsOn": [
        "[variables('vnetName')]",
        "[variables('loadBalancerName')]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('vmArtPri')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('loadBalancerName'),'LBArt')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('loadBalancerName'), 'ssh')]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-08-01",
      "copy": {
        "count": "[sub(variables('numberOfArtifactory'),1)]",
        "name": "netIntLoop"
      },
      "dependsOn": [
        "[variables('vnetName')]",
        "[variables('loadBalancerName')]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmArtSec'),copyindex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('loadBalancerName'),'LBArt')]"
                }
              ],
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-08-01",
      "copy": {
        "count": "[variables('numberOfXray')]",
        "name": "netXrLoop"
      },
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmXray'),copyindex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-08-01",
      "copy": {
        "count": "[variables('numberOfDb')]",
        "name": "netDbLoop"
      },
      "dependsOn": [
        "[variables('vnetName')]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmDb'),copyindex())]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-12-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameDiag'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmArtPri'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('vmArtPri')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('storageAccountNameDiag'), '2019-06-01').primaryEndpoints.blob]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmArtPri'))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computerName": "[variables('vmArtPri')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('adminPublicKey')]",
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "2019-12-01",
      "copy": {
        "count": "[sub(variables('numberOfArtifactory'),1)]",
        "name": "virtualMachineLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameDiag'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmArtSec'),copyindex()))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmArtSec'), copyindex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('storageAccountNameDiag'), '2019-06-01').primaryEndpoints.blob]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmArtSec'),copyindex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computerName": "[concat(variables('vmArtSec'), copyindex())]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('adminPublicKey')]",
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "2019-12-01",
      "copy": {
        "count": "[variables('numberOfXray')]",
        "name": "virtualMachineLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameDiag'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmXray'),copyindex()))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmXray'), copyindex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('storageAccountNameDiag'), '2019-06-01').primaryEndpoints.blob]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmXray'),copyindex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computerName": "[concat(variables('vmXray'), copyindex())]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('adminPublicKey')]",
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "2019-12-01",
      "copy": {
        "count": "[variables('numberOfDb')]",
        "name": "virtualMachineLoop"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNameDiag'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmDb'),copyindex()))]",
        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[concat(variables('vmDb'), copyindex())]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(variables('storageAccountNameDiag'), '2019-06-01').primaryEndpoints.blob]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmDb'),copyindex()))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "computerName": "[concat(variables('vmDb'), copyindex())]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('adminPublicKey')]",
                  "path": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "offer": "[variables('imageOffer')]",
            "publisher": "[variables('imagePublisher')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          }
        }
      },
      "type": "Microsoft.Compute/virtualMachines"
    }
  ],
  "variables": {
    "adminUsername": "ubuntu",
    "availabilitySetName": "availSet",
    "imageOffer": "UbuntuServer",
    "imagePublisher": "Canonical",
    "imageSku": "16.04-LTS",
    "loadBalancerIp": "lbIp",
    "loadBalancerName": "LB",
    "mainNsg": "mainNsg",
    "numberOfArtifactory": "[parameters('numberOfArtifactory')]",
    "numberOfDb": "[parameters('numberOfDb')]",
    "numberOfXray": "[parameters('numberOfXray')]",
    "storageAccountNameDiag": "[concat('diag',uniqueString(resourceGroup().id))]",
    "subnet-id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'),variables('subnetName'))]",
    "subnetAddressRange": "[parameters('subnetAddressRange')]",
    "subnetName": "mainSubnet",
    "vmArtPri": "vmArtPri",
    "vmArtSec": "vmArtSec",
    "vmDb": "vmDb",
    "vmXray": "vmXray",
    "vnetAddressRange": "[parameters('vnetAddressRange')]",
    "vnetName": "[parameters('vnetName')]"
  }
}
