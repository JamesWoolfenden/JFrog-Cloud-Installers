{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "outputs": {
    "adminUsername": {
      "type": "String",
      "value": "[parameters('adminUsername')]"
    },
    "commandTExecute": {
      "type": "String",
      "value": "[variables('commandToExecute')]"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "defaultValue": "https://raw.githubusercontent.com/jfrog/JFrog-Cloud-Installers/vm-image-templates/AzureResourceManager/JCR/",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
      },
      "type": "securestring"
    },
    "addressPrefixes": {
      "type": "Array"
    },
    "adminPassword": {
      "type": "SecureString"
    },
    "adminUsername": {
      "type": "String"
    },
    "artifactoryVersion": {
      "type": "String"
    },
    "baseTime": {
      "defaultValue": "[utcNow()]",
      "type": "string"
    },
    "diagnosticsStorageAccountId": {
      "type": "String"
    },
    "diagnosticsStorageAccountKind": {
      "type": "String"
    },
    "diagnosticsStorageAccountName": {
      "type": "String"
    },
    "diagnosticsStorageAccountType": {
      "type": "String"
    },
    "location": {
      "type": "String"
    },
    "namingInfix": {
      "type": "string"
    },
    "networkSecurityGroupRules": {
      "type": "Array"
    },
    "publicIpAddressSku": {
      "type": "String"
    },
    "publicIpAddressType": {
      "type": "String"
    },
    "scriptName": {
      "type": "String"
    },
    "storageAccountName": {
      "type": "String"
    },
    "subnetName": {
      "type": "String"
    },
    "subnets": {
      "type": "Array"
    },
    "virtualMachineComputerName": {
      "type": "String"
    },
    "virtualMachineName": {
      "type": "String"
    },
    "virtualMachineSize": {
      "type": "String"
    }
  },
  "resources": [
    {
      "apiVersion": "2019-07-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[variables('networkInterfaceName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('nsgId')]"
        }
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "name": "[variables('networkSecurityGroupName')]",
      "properties": {
        "securityRules": "[parameters('networkSecurityGroupRules')]"
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "apiVersion": "2019-09-01",
      "location": "[parameters('location')]",
      "name": "[variables('virtualNetworkName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('addressPrefixes')]"
        },
        "subnets": "[parameters('subnets')]"
      },
      "type": "Microsoft.Network/virtualNetworks"
    },
    {
      "apiVersion": "2019-02-01",
      "location": "[parameters('location')]",
      "name": "[variables('publicIpAddressName')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      },
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      },
      "type": "Microsoft.Network/publicIpAddresses"
    },
    {
      "apiVersion": "2019-07-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "location": "[parameters('location')]",
      "name": "[parameters('virtualMachineName')]",
      "properties": {
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPassword')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computerName": "[parameters('virtualMachineComputerName')]"
        },
        "storageProfile": {
          "imageReference": {
            "offer": "UbuntuServer",
            "publisher": "Canonical",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "fromImage",
            "name": "[parameters('virtualMachineName')]",
            "vhd": {
              "uri": "[concat(variables('storageContainerUri'), parameters('virtualMachineName'), variables('diskNameSalt'), '.vhd')]"
            }
          }
        }
      },
      "resources": [
        {
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
          ],
          "location": "[parameters('location')]",
          "name": "extension1",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "publisher": "Microsoft.Azure.Extensions",
            "settings": {
              "commandToExecute": "[variables('commandToExecute')]",
              "fileUris": [
                "[variables('fileLocation')]"
              ]
            },
            "type": "CustomScript",
            "typeHandlerVersion": "2.0"
          },
          "type": "extensions"
        }
      ],
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "2019-06-01",
      "kind": "[parameters('diagnosticsStorageAccountKind')]",
      "location": "[parameters('location')]",
      "name": "[parameters('diagnosticsStorageAccountName')]",
      "properties": {},
      "sku": {
        "name": "[parameters('diagnosticsStorageAccountType')]"
      },
      "type": "Microsoft.Storage/storageAccounts"
    }
  ],
  "variables": {
    "commandToExecute": "[concat('bash ', variables('scriptName'), ' ', parameters('artifactoryVersion'))]",
    "diskNameSalt": "[concat(parameters('artifactoryVersion'), '-', parameters('baseTime'))]",
    "fileLocation": "[uri(parameters('_artifactsLocation'), concat('vm_install/', variables('scriptName'), parameters('_artifactsLocationSasToken')))]",
    "networkInterfaceName": "[concat(parameters('namingInfix'), '-nic')]",
    "networkSecurityGroupName": "[concat(parameters('namingInfix'), '-nsg')]",
    "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
    "publicIpAddressName": "[concat(parameters('namingInfix'), '-public-ip')]",
    "scriptName": "[parameters('scriptName')]",
    "storageContainerUri": "[concat(concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/'), 'vhds/')]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "virtualNetworkName": "[concat(parameters('namingInfix'), '-vnet')]",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
  }
}
